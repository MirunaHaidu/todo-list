(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function s(s){e(1,arguments);var a=Object.prototype.toString.call(s);return s instanceof Date||"object"===t(s)&&"[object Date]"===a?new Date(s.getTime()):"number"==typeof s||"[object Number]"===a?new Date(s):("string"!=typeof s&&"[object String]"!==a||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function a(t){e(1,arguments);var a=s(t);return a.setHours(0,0,0,0),a}function n(t){if(null===t||!0===t||!1===t)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}var o={};function c(){return o}function d(t,a){var o,d,i,r,l,u,p,m;e(1,arguments);var k=c(),T=n(null!==(o=null!==(d=null!==(i=null!==(r=null==a?void 0:a.weekStartsOn)&&void 0!==r?r:null==a||null===(l=a.locale)||void 0===l||null===(u=l.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==i?i:k.weekStartsOn)&&void 0!==d?d:null===(p=k.locale)||void 0===p||null===(m=p.options)||void 0===m?void 0:m.weekStartsOn)&&void 0!==o?o:0);if(!(T>=0&&T<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var g=s(t),h=g.getDay(),j=(h<T?7:0)+h-T;return g.setDate(g.getDate()-j),g.setHours(0,0,0,0),g}class i{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.find((e=>e.getName()===t))}contains(t){return this.tasks.some((e=>e.getName()===t))}addTask(t){this.tasks.find((e=>e.getName()===t.name))||this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}getTasksToday(){return this.tasks.filter((t=>function(t){return e(1,arguments),function(t,s){e(2,arguments);var n=a(t),o=a(s);return n.getTime()===o.getTime()}(t,Date.now())}(s(new Date(t.getDateFormatted())))))}getTasksThisWeek(){return this.tasks.filter((t=>function(t,s){return e(1,arguments),function(t,s,a){e(2,arguments);var n=d(t,a),o=d(s,a);return n.getTime()===o.getTime()}(t,Date.now(),s)}(function(t,a){return e(2,arguments),function(t,a){e(2,arguments);var o=s(t),c=n(a);return isNaN(c)?new Date(NaN):c?(o.setDate(o.getDate()+c),o):o}(t,-n(a))}(s(new Date(t.getDateFormatted())),1))))}}class r{constructor(t,e="No date"){this.name=t,this.dueDate=e}setName(t){this.name}setDate(t){this.dueDate=t}getDate(){return this.dueDate}getDateFormatted(){const t=this.dueDate.split("/")[0];return`${this.dueDate.split("/")[1]}/${t}/${this.dueDate.split("/")[2]}`}}class l{constructor(){this.projects=[],this.projects.push(new i("Inbox")),this.projects.push(new i("Today")),this.projects.push(new i("This week"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}updateTodayProject(){this.getProject("Today").tasks=[],this.projects.forEach((t=>{"Today"!==t.getName()&&"This week"!==t.getName()&&t.getTasksToday().forEach((e=>{const s=`${e.getName()} (${t.getName()})`;this.getProject("Today").addTask(new r(s,e.getDate()))}))}))}updateWeekProject(){this.getProject("This week").tasks=[],this.projects.forEach((t=>{"Today"!==t.getName()&&"This week"!==t.getName()&&t.getTasksThisWeek().forEach((e=>{const s=`${e.getName()} (${t.getName()})`;this.getProject("This week").addTask(new r(s,e.getDate()))}))})),this.getProject("This week").setTasks(this.getProject("This week").getTasks().sort(((t,a)=>function(t,a){e(2,arguments);var n=s(t),o=s(a),c=n.getTime()-o.getTime();return c<0?-1:c>0?1:c}(s(new Date(t.getDateFormatted())),s(new Date(a.getDateFormatted()))))))}}class u{static saveToDoList(t){localStorage.setItem("toDoList",JSON.stringify(t))}static getToDoList(){const t=Object.assign(new l,JSON.parse(localStorage.getItem("toDoList")));return t.setProjects(t.getProjects().map((t=>Object.assign(new i,t)))),t.getProjects().forEach((t=>t.setTasks(t.getTasks().map((t=>Object.assign(new r,t)))))),t}static addProject(t){const e=u.getToDoList();e.addProject(t),u.saveToDoList(e)}static deleteProject(t){const e=u.getToDoList();e.deleteProject(t),u.saveToDoList(e)}static addTask(t,e){const s=u.getToDoList();s.getProject(t).addTask(e),u.saveToDoList(s)}static deleteTask(t,e){const s=u.getToDoList();s.getProject(t).deleteTask(e),u.saveToDoList(s)}static renameTask(t,e,s){const a=u.getToDoList();a.getProject(t).getTasks(e).setName(s),u.saveToDoList(a)}static setTaskDate(t,e,s){u.getToDoList().getProject(t).getTasks(e).setDate(s)}static updateTodayProject(){const t=u.getToDoList();t.updateTodayProject(),u.saveToDoList(t)}static updateWeekProject(){const t=u.getToDoList();t.updateWeekProject(),u.saveToDoList(t)}}class p{static loadHomepage(){p.loadProjects(),p.initProjectButtons(),p.openProject("Inbox",document.getElementById("btn-inbox")),document.addEventListener("keydown",p.handleKeyboardInput)}static loadProjects(){u.getToDoList().getProjects().forEach((t=>{"Inbox"!==t.name&&"Today"!==t.name&&"This week"!==t.name&&p.createProject(t.name)})),p.initAddProjectButtons()}static loadTasks(t){u.getToDoList().getProject(t).getTasks().forEach((t=>p.createTask(t.name,t.dueDate))),"Today"!==t&&"This week"!==t&&p.initAddTaskButtons()}static loadProjectContent(t){const e=document.getElementById("project-preview");e.innerHTML=`<h1 id="project-name">${t}</h1>\n                                <div class="tasks-list" id="tasks-list"></div>`,"Today"!==t&&"This week"!==t&&(e.innerHTML+='\n            <button class="button-add-task" id="button-add-task"><span class="material-symbols-outlined plus">\n            add_circle\n        </span>Add task</button>\n            <div class="add-task-popup" id="add-task-popup">\n          <input\n            class="input-add-task-popup"\n            id="input-add-task-popup"\n            type="text"\n          />\n          <div class="add-task-popup-buttons">\n            <button class="button-add-task-popup" id="button-add-task-popup">\n              Add\n            </button>\n            <button\n              class="button-cancel-task-popup"\n              id="button-cancel-task-popup"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>'),p.loadTasks(t)}static createProject(t){document.getElementById("workspace-list").innerHTML+=`\n        <button class="button-project"  data-project-button>\n            <div class="left-project-pannel">\n            <span class="material-symbols-outlined list">\n            list\n            </span><span>${t}</span>\n            </div>\n            <div class="right-project-pannel">\n            <span class="material-symbols-outlined close">\n                close\n            </span></div>\n        </button>`,p.initProjectButtons()}static createTask(t,e){document.getElementById("tasks-list").innerHTML+=`\n        <button class="button-task" data-task-button>\n        <div class="left-task-panel">\n        <span class="material-symbols-outlined circle">circle</span>\n          <p class="task-content">${t}</p>\n          <input type="text" class="input-task-name" data-input-task-name>\n        </div>\n        <div class="right-task-panel">\n          <p class="due-date" id="due-date">${e}</p>\n          <input type="date" class="input-due-date" data-input-due-date>\n          <span class="material-symbols-outlined close">\n                close\n            </span>\n        </div>\n      </button>`,p.initTaskButtons()}static clear(){p.clearProjectPreview(),p.clearProjects(),p.clearTasks()}static clearProjectPreview(){document.getElementById("project-preview").textContent=""}static clearProjects(){document.getElementById("workspace-list").textContent=""}static clearTasks(){document.getElementById("tasks-list").textContent=""}static closeAllPopups(){p.closeAddProjectPopup(),document.getElementById("button-add-task")&&p.closeAddTaskPopup(),document.getElementById("tasks-list")&&""!==document.getElementById("tasks-list").innerHTML&&p.closeAllInputs()}static closeAllInputs(){document.querySelectorAll("[data-task-button]").forEach((t=>{p.closeRenameInput(t),p.closeSetDateInput(t)}))}static handleKeyboardInput(t){"Escape"===t.key&&p.closeAllPopups()}static initAddProjectButtons(){const t=document.getElementById("btn-add-project"),e=document.getElementById("button-add-project"),s=document.getElementById("button-cancel-project"),a=document.getElementById("input-add-project-popup");t.addEventListener("click",p.openAddProjectPopup),e.addEventListener("click",p.addProject),s.addEventListener("click",p.closeAddProjectPopup),a.addEventListener("keypress",p.handleAddProjectPopupInput)}static openAddProjectPopup(){const t=document.getElementById("add-project-popup"),e=document.getElementById("btn-add-project");p.closeAllPopups(),t.classList.add("active"),e.classList.add("active")}static closeAddProjectPopup(){const t=document.getElementById("add-project-popup"),e=document.getElementById("btn-add-project"),s=document.getElementById("input-add-project-popup");t.classList.remove("active"),e.classList.remove("active"),s.value=""}static addProject(){const t=document.getElementById("input-add-project-popup"),e=t.value;if(""!==e){if(u.getToDoList().contains(e))return t.value="",void alert("Project names must be different");u.addProject(new i(e)),p.createProject(e),p.closeAddProjectPopup()}else alert("Project name can't be empty")}static handleAddProjectPopupInput(t){"Enter"===t.key&&p.addProject()}static initProjectButtons(){const t=document.getElementById("btn-inbox"),e=document.getElementById("btn-today"),s=document.getElementById("btn-week"),a=document.querySelectorAll("[data-project-button]");t.addEventListener("click",p.openInboxTasks),e.addEventListener("click",p.openTodayTasks),s.addEventListener("click",p.openWeekTasks),a.forEach((t=>t.addEventListener("click",p.handleProjectButton)))}static openInboxTasks(){p.openProject("Inbox",this)}static openTodayTasks(){u.updateTodayProject(),p.openProject("Inbox",this)}static openWeekTasks(){u.updateWeekProject("This week",this)}static handleProjectButton(t){const e=this.children[0].children[1].textContent;t.target.classList.contains("close")?p.deleteProject(e,this):p.openProject(e,this)}static openProject(t,e){e&&e.classList?([...document.querySelectorAll(".button-project")].forEach((t=>t.classList.remove("active"))),e.classList.add("active"),p.closeAddProjectPopup(),p.loadProjectContent(t)):console.error("Invalid projectButton:",e)}static deleteProject(t,e){e.classList.contains("active")&&p.clearProjectPreview(),u.deleteProject(t),p.clearProjects(),p.loadProjects()}static initAddTaskButtons(){const t=document.getElementById("button-add-task"),e=document.getElementById("button-add-task-popup"),s=document.getElementById("button-cancel-task-popup"),a=document.getElementById("input-add-task-popup");t.addEventListener("click",p.openAddTaskPopup),e.addEventListener("click",p.addTask),s.addEventListener("click",p.closeAddTaskPopup),a.addEventListener("keypress",p.handleAddTaskPopupInput)}static openAddTaskPopup(){const t=document.getElementById("add-task-popup"),e=document.getElementById("button-add-task");p.closeAllPopups(),t.classList.add("active"),e.classList.add("active")}static closeAddTaskPopup(){const t=document.getElementById("add-task-popup"),e=document.getElementById("button-add-task"),s=document.getElementById("input-add-task-popup");t.classList.remove("active"),e.classList.remove("active"),s.value=""}static addTask(){const t=document.getElementById("project-name").textContent,e=document.getElementById("input-add-task-popup"),s=e.value;if(""!==s){if(u.getToDoList().getProject(t).contains(s))return alert("Task names must be different"),void(e.value="");u.addTask(t,new r(s)),p.createTask(s,"No date"),p.closeAddTaskPopup()}else alert("Task name can't be empty")}static handleAddTaskPopupInput(t){"Enter"===t.key&&p.addTask()}static initTaskButtons(){const t=document.querySelectorAll("[data-task-button]"),e=document.querySelectorAll("[data-input-task-name]"),s=document.querySelectorAll("[data-input-due-date]");t.forEach((t=>t.addEventListener("click",p.handleTaskButton))),e.forEach((t=>t.addEventListener("keypress",p.renameTask))),s.forEach((t=>t.addEventListener("change",p.setTaskDate)))}static handleTaskButton(t){t.target.classList.contains("circle")?p.setTaskCompleted(this):t.target.classList.contains("cancel")?p.deleteTask(this):t.target.classList.contains("task-content")?p.openRenameInput(this):t.target.classList.contains("due-date")&&p.openSetDateInput(this)}static setTaskCompleted(t){const e=document.getElementById("project-name").textContent,s=t.children[0].children[1].textContent;if("Today"===e||"This week"===e){const t=s.split("(")[1].split(")")[0];u.deleteTask(t,s.split(" ")[0]),"Today"===e?u.updateTodayProject():u.updateWeekProject()}else u.deleteTask(e,s);p.clearTasks(),p.loadTasks(e)}static deleteTask(t){const e=document.getElementById("project-name").textContent,s=t.children[0].children[1].textContent;if("Today"===e||"This week"===e){const t=s.split("(")[1].split(")")[0];u.deleteTask(t,s)}u.deleteTask(e,s),p.clearTasks(),p.loadTasks()}static openRenameInput(t){const e=t.children[0].children[1];let s=e.textContent;const a=t.children[0].children[2],n=t.parentNode.parentNode.children[0].textContent;"Today"!==n&&"This week"!==n||([s]=s.split(" (")),p.closeAllPopups(),e.classList.add("active"),a.classList.add("active"),a.value=s}static closeRenameInput(t){const e=t.children[0].children[1],s=t.children[0].children[2];e.classList.remove("active"),s.classList.remove("active"),s.value=""}static renameTask(t){if("Enter"!==t.key)return;const e=document.getElementById("project-name").textContent,s=this.previousElementSibling.textContent,a=this.value;if(""!==a){if(u.getToDoList().getProject(e).contains(a))return this.value="",void alert("Task names must be different");if("Today"===e||"This week"===e){const t=s.split("(")[1].split(")")[0],n=s.split(" ")[0];u.renameTask(e,s,`${a} (${t})`),u.renameTask(t,n,a)}else u.renameTask(e,s,a);p.clearTasks(),p.loadTasks(e),p.closeRenameInput(this.parentNode.parentNode)}else alert("Task names can't be different")}}document.addEventListener("DOMContentLoaded",p.loadHomepage)})();